# this playbook is used to show how handlers work with handlers and notify both in same playbook
---
- name: Example playbook with handlers
  hosts: webservers
  become: yes

  vars:
    config_file_path: /etc/myapp/myapp.conf

  tasks:
    - name: Ensure configuration file is present
      copy:
        src: myapp.conf
        dest: "{{ config_file_path }}"
      notify: Restart myapp service

  handlers:
    - name: Restart myapp service
      systemd:
        name: myapp
        state: restarted
#########explaination is as below###########
#Explanation
#Playbook Definition:

#The playbook is targeted at the webservers group.

#become: yes ensures that tasks are run with elevated privileges (typically necessary for modifying system files and managing services).
#Variables:

#config_file_path is defined for the path to the configuration file.
#Tasks
#The copy module is used to ensure that the myapp.conf configuration file is present at the specified path.
#The notify directive tells Ansible to trigger the Restart myapp service handler if the copy task results in a change (e.g., if the file is updated or created).
#Handlers:

#Handlers are defined in a separate handlers section.
#The Restart myapp service handler uses the systemd module to restart the myapp service.